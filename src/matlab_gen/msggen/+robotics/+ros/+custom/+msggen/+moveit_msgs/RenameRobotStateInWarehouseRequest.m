classdef RenameRobotStateInWarehouseRequest < robotics.ros.Message
    %RenameRobotStateInWarehouseRequest MATLAB implementation of moveit_msgs/RenameRobotStateInWarehouseRequest
    %   This class was automatically generated by
    %   robotics.ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2018 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'moveit_msgs/RenameRobotStateInWarehouseRequest' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = '073dc05c3fd313b947cea483c25c46b0' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Dependent)
        OldName
        NewName
        Robot
    end
    
    properties (Constant, Hidden)
        PropertyList = {'NewName', 'OldName', 'Robot'} % List of non-constant message properties
        ROSPropertyList = {'new_name', 'old_name', 'robot'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = RenameRobotStateInWarehouseRequest(msg)
            %RenameRobotStateInWarehouseRequest Construct the message object RenameRobotStateInWarehouseRequest
            import com.mathworks.toolbox.robotics.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('robotics:ros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('robotics:ros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('robotics:ros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function oldname = get.OldName(obj)
            %get.OldName Get the value for property OldName
            oldname = char(obj.JavaMessage.getOldName);
        end
        
        function set.OldName(obj, oldname)
            %set.OldName Set the value for property OldName
            validateattributes(oldname, {'char'}, {}, 'RenameRobotStateInWarehouseRequest', 'OldName');
            
            obj.JavaMessage.setOldName(oldname);
        end
        
        function newname = get.NewName(obj)
            %get.NewName Get the value for property NewName
            newname = char(obj.JavaMessage.getNewName);
        end
        
        function set.NewName(obj, newname)
            %set.NewName Set the value for property NewName
            validateattributes(newname, {'char'}, {}, 'RenameRobotStateInWarehouseRequest', 'NewName');
            
            obj.JavaMessage.setNewName(newname);
        end
        
        function robot = get.Robot(obj)
            %get.Robot Get the value for property Robot
            robot = char(obj.JavaMessage.getRobot);
        end
        
        function set.Robot(obj, robot)
            %set.Robot Set the value for property Robot
            validateattributes(robot, {'char'}, {}, 'RenameRobotStateInWarehouseRequest', 'Robot');
            
            obj.JavaMessage.setRobot(robot);
        end
    end
    
    methods (Access = protected)
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@robotics.ros.Message(obj);
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.OldName = obj.OldName;
            cpObj.NewName = obj.NewName;
            cpObj.Robot = obj.Robot;
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.OldName = strObj.OldName;
            obj.NewName = strObj.NewName;
            obj.Robot = strObj.Robot;
        end
    end
    
    methods (Access = ?robotics.ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.OldName = obj.OldName;
            strObj.NewName = obj.NewName;
            strObj.Robot = obj.Robot;
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?robotics.ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = robotics.ros.custom.msggen.moveit_msgs.RenameRobotStateInWarehouseRequest.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = robotics.ros.custom.msggen.moveit_msgs.RenameRobotStateInWarehouseRequest;
            obj.reload(strObj);
        end
    end
end
